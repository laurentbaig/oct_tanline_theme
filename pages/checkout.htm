title = "Checkout"
url = "/checkout"
layout = "basic"
is_hidden = 0

[Basket]

[Countries]

[Order]
==
<?php

function onStart()
{
$this['paypal_client_id'] = \Lbaig\Tanline\Models\Settings::get('paypal_client_id');
}
?>
==
<h1 class="text-center">Checkout</h1>
<div class="flex flex-wrap">
    <div class="w-full md:w-1/2 p-2">

	<div id="get-email" class="card border bg-white p-6 m-4">
	    <div class="card-title py-2">
		<span class="text-lg font-bold">1. Your Email</span>
		<span class="float-right text-sm text-gray-500 hidden edit-button actionable">Edit</span>
	    </div>
	    <div class="card-body-form py-2 font-sans">
		<form>
		    <div class="form-control">
			<input type="email" id="email" autocomplete="email"
			       {% if user %}
			       value="{{ user.email }}"
			       {% endif %}
			>
		    </div>
		    <div class="text-gray-600 text-xs">
			You'll receive receipts and notifications at this email address
		    </div>
		    <button class="w-full" disabled>continue</button>
		</form>
		<div class="result text-gray-500"></div>
	    </div>
	</div>

	<div id="get-shipping" class="card border bg-white p-6 m-4">
	    <div class="card-title text-lg font-bold py-2">
		<span class="text-lg font-bold">2. Shipping</span>
		<span class="float-right text-sm text-gray-500 hidden edit-button actionable">Edit</span>
	    </div>
	    <div class="card-body py-2 hidden font-sans">
		<form>
		    <div class="flex flex-row flex-wrap">
			{#
			{% if obShippingTypeList.isNotEmpty() %}
			<div class="form-control">
			    <select id="shipping-type">
				{% set obShippingType = Cart.getActiveShippingTypeFromRequest() %}
				{% if not obShippingType %}
				<option value="0" selected disabled><-- Select Shipping --></option>
				{% endif %}
				{% for item in obShippingTypeList %}
				<option value="{{ item.id }}" {{ item.id==obShippingType.id ? 'selected' : '' }}>{{ item.name }}</option>
				{% endfor %}
			    </select>
			</div>
			{% endif %}
			#}

			<div class="form-control w-full">
			    <input type="text" id="addressee" placeholder="Addressee, e.g. Harry Potter" required autocomplete="name">
			</div>
			<div class="form-control w-full">
			    <input type="text" id="street" placeholder="Street" required autocomplete="street-address">
			</div>
			<div class="form-control w-full">
			    <input type="text" id="city" placeholder="City / Town" required autocomplete="address-level2">
			</div>
			<div class="form-control w-full">
			    <input type="text" id="zip" placeholder="ZIP Code" required autocomplete="postal-code">
			</div>

			<div class="flex w-full">
			    <div class="form-control flex-1">
			        <select id="countries"
			    		name="country_id"
			    		data-request="onCountrySelect"
			    		data-request-update="state_options: '#state-options', 'basket/basket-item-summary': '#basket-item-summary'">
			    	    {% for item in Countries.countries %}
			    	    <option value="{{ item.id }}">{{ item.name }} {% if item.shipping > 0 %}(+${{ item.shipping }}){% endif %}</option>
			    	    {% endfor %}
			        </select>
			    </div>

			    <div id="state-options" class="form-control flex-1">
				{% partial  'state_options' %}
			    </div>
			</div>
			<!-- alternate international -->
			<div id="altinternational" class="flex w-full hidden">
			    <div class="form-control flex-1">
				<input type="text" id="altcountry" placeholder="Country">
			    </div>
			    <div class="form-control flex-1">
				<input type="text" id="altstate" placeholder="Province/State">
			    </div>
			</div>

			<div class="form-control w-full">
			    <input type="tel" id="phone" placeholder="Phone Number" required autocomplete="tel">
			</div>
		    </div>
		    <div class="py-1"></div>
		    <button class="w-full" disabled>continue</button>
		</form>
		<div class="result text-gray-500"></div>
	    </div>
	</div>

	<div id="get-payment" class="card border bg-white p-6 m-4">
	    <div class="card-title text-lg font-bold py-2">
		<div>3. Payment</div>
	    </div>
	    <div class="card-body py-2 font-sans">
		<div class="flex flex-row flex-wrap">
		    <div id="paypal-button-container"></div>
		    <div id="page-processing" class="mx-auto lds-heart"><div class="hidden"></div></div>
		</div>
	    </div>

	</div>
    </div>


    <div class="w-full md:w-1/2 p-2">
	<div class="order-summary card border bg-white p-6 m-4">
	    <div class="card-title text-lg font-bold">
		<span class="text-lg font-bold">Order Summary</span>
		<span class="float-right text-sm text-blue-500"><a href="{{ 'basket'|page }}">Edit Cart</a></span>
	    </div>
	    <div id="basket-item-summary" class="card-body font-sans">
		{% partial 'basket/basket-item-summary' %}
	    </div>
	</div>
    </div>
</div>

{% put page_scripts %}
<script src="https://www.paypal.com/sdk/js?client-id={{ paypal_client_id }}&currency=USD" data-sdk-integration-source="button-factory"></script>

<script>
 // function to validate email format
 function validateEmail(email) {
     var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
     return re.test(String(email).toLowerCase());
 }

 // test for email, if valid enable button
 $("#get-email input").on('input', function (e) {
     if (validateEmail(e.target.value)) {
	 $("#get-email button").prop('disabled', false);
     }
     else {
	 $("#get-email button").prop('disabled', true);
     }
 });

 // if button clicked, either edit email or move to address
 $("#get-email").click(function (e) {
     if ($(e.target).hasClass('edit-button')) {
	 $("#get-email form").removeClass('hidden');
	 $("#get-email .edit-button").addClass('hidden');
	 $("#get-shipping .card-body").addClass('hidden');
	 $("#get-payment .card-body").addClass('hidden');
	 $("#get-email .result").text('');
     }
     else if (e.target.tagName === 'BUTTON') {
	 e.preventDefault();
	 $("#get-email form").addClass('hidden');
	 $("#get-email .result").html($("#get-email #email").val());
	 $("#get-email .edit-button").removeClass('hidden');
	 $("#get-shipping .card-body").removeClass('hidden');

     }
 });

 // validate address input
 $("#get-shipping").on('input', function (e) {
     let addressee = document.querySelector("#addressee").value;
     let street = document.querySelector("#street").value;
     let city = document.querySelector("#city").value;
     let state = document.querySelector("#state").value;
     let altstate = document.querySelector("#altstate").value;
     let zip = document.querySelector("#zip").value;
     let phone = document.querySelector('#phone').value;
     let email = document.querySelector('#email').value;
     if (addressee.length > 0 && street.length > 0
	 && city.length > 0 && zip.length > 0
	 && (state.length > 0 || altstate.length > 0)
	 && phone.length > 0 // && shipping > 0
     ) {
	 $('#get-shipping button').prop('disabled', false);
     } else {
	 $('#get-shipping button').prop('disabled', true);
     }
 });

 // if button clicked, either edit address or move on to payment
 $("#get-shipping").click(function (e) {
     if ($(e.target).hasClass('edit-button')) {
	 $("#get-shipping form").removeClass('hidden');
	 $("#get-shipping .edit-button").addClass('hidden');
	 $("#get-shipping .result").text('');
	 $("#get-payment .card-body").addClass('hidden');
     }
     else if (e.target.tagName === 'BUTTON') {
	 e.preventDefault();
	 let addressee = document.querySelector("#addressee").value;
	 let street = document.querySelector("#street").value;
	 let city = document.querySelector("#city").value;
	 let state = '';
	 let country = document.querySelector("#countries").selectedOptions[0].innerHTML;
	 let country_id = document.querySelector("#countries").value;
	 if (country_id == 3) {
	     state = document.querySelector("#altstate").value;
	     country = document.querySelector("#altcountry").value;
	 } else {
	     state = document.querySelector("#state").selectedOptions[0].innerHTML;
	 }
	 let zip = document.querySelector("#zip").value;
	 let phone = document.querySelector('#phone').value;
	 let email = document.querySelector('#email').value;
	 let basketId = document.querySelector("#basket-id").value;
	 let result=`<div>${addressee}</div>`
		  + `<div>${street}</div>`
		  + `<div>${city}, ${state}, ${zip}</div>`
	          + `<div>${country}</div>`
		  + `<div>${phone}</div>`;
	 $("#get-shipping .result").html(result);
	 $("#get-shipping form").addClass('hidden');
	 $("#get-shipping .edit-button").removeClass('hidden');
	 $("#get-payment .card-body").removeClass('hidden');

	 let subTotal = document.querySelector('.order-summary .subtotal').innerHTML;
	 let discount = document.querySelector('.order-summary .discount').innerHTML;
	 let totalPrice = document.querySelector('.order-summary .total-amount').innerHTML;
	 let shipping = document.querySelector('.order-summary .shipping-amount').innerHTML;
	 let taxAmount = document.querySelector('.order-summary .tax-amount').innerHTML;

	 // once the shipping button is clicked, go ahead and create
	 // (render) the payment button here
	 $("#paypal-button-container").html('');
	 paypal.Buttons({
	     style: {
		 shape: 'rect',
		 color: 'blue',
		 layout: 'vertical',
		 label: 'paypal',
	     },
	     createOrder: function(data, actions) {
		 // disable button?
		 return actions.order.create({
		     purchase_units: [{
			 amount: {
			     value: totalPrice 
			 }
		     }]
		 });
	     },
	     onApprove: function(data, actions) {
		 $("#paypal-button-container").addClass('hidden');
		 $("#page-processing div").removeClass('hidden');
		 return actions.order.capture()
			       .then(function(details) {
				   // this is our callback space after
				   // payment is confirmed via PayPal
				   let data = {
				       order: {
					   basket_id: basketId,
					   payment_method_id: 0,
					   subtotal: subTotal,
					   discount: discount,
					   shipping: shipping,
					   tax_amount: taxAmount,
					   total_price: totalPrice,
					   email: email,
					   phone: phone,
					   shipping_address: {
					       addressee,
					       street,
					       city,
					       state,
					       country,
					       postcode: zip
					   },
				       },
				   };
				   $.request('Order::onCreate', {
				       data: data,
				       update: {},
				       success: function() {
					   window.location = '/thank-you'
				       }
				   });
			       })
			       .catch(function (response) {
				   console.log(response);
			       }) ;
	     }
	 }).render('#paypal-button-container');
     }
 });

 $("#countries").change(function (e) {
     e.preventDefault();
     let country_id = document.querySelector("#countries").value;
     if (country_id == 3) {
	 $("#altinternational").removeClass('hidden');
     }
     else {
	 $("#altinternational").addClass('hidden');
     }
 });
</script>
{% endput %}
